{"version":3,"sources":["components/AddProduct.js","components/Product.js","components/ProgressBar.js","components/ShoppingList.js","components/App.js","serviceWorker.js","index.js"],"names":["AddProduct","state","text","important","handleChange","e","target","name","_this","setState","value","checked","handleSubmit","preventDefault","length","props","addProduct","_this$state","this","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","htmlFor","id","Component","Product","classes","active","concat","date","Date","purchasedDate","toLocaleString","click","join","onClick","ProgressBar","progressPercent","handleClick","percent","redHue","greenHue","purchased","sum","Math","round","style","width","backgroundColor","numeric","percentage","ShoppingList","activeProducts","products","filter","product","purchasedProducts","activeSort","sort","b","toLowerCase","localeCompare","purchasedSort","wrapperStyle","activeProductsList","map","src_components_Product","key","purchasedProductsList","display","Fragment","handleSort","src_components_ProgressBar","App","idCounter","prevState","Object","toConsumableArray","currentTarget","index","findIndex","getTime","src_components_AddProduct","src_components_ShoppingList","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c1af5e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './AddProduct.scss';\r\n\r\nclass AddProduct extends Component {\r\n  state = {\r\n    text: '',\r\n    important: false\r\n  }\r\n\r\n  handleChange = e => {\r\n    if (e.target.name === 'text') {\r\n      this.setState({\r\n        text: e.target.value\r\n      })\r\n    } else if (e.target.name === 'important') {\r\n      this.setState({\r\n        important: e.target.checked\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // product can be add if has minimum 1 letter\r\n    if (this.state.text.length > 0) {\r\n      this.props.addProduct(this.state.text, this.state.important);\r\n    }\r\n    this.setState({\r\n      text: '',\r\n      important: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { text, important } = this.state;\r\n    return (\r\n      <form\r\n        className=\"add-product\"\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <input\r\n          className=\"add-product__input\"\r\n          type=\"text\"\r\n          name=\"text\"\r\n          placeholder=\"Dodaj nowy produkt...\"\r\n          value={text}\r\n          onChange={this.handleChange}\r\n        />\r\n        <div className=\"add-product__part\">\r\n          <label\r\n            className=\"add-product__label\"\r\n            htmlFor=\"important\">\r\n            <input\r\n              className=\"add-product__checkbox\"\r\n              type=\"checkbox\"\r\n              name=\"important\"\r\n              id=\"important\"\r\n              checked={important}\r\n              onChange={this.handleChange}\r\n            />\r\n          Priorytet\r\n          </label>\r\n          <button\r\n            className=\"add-product__button\"\r\n          >\r\n            Dodaj do listy\r\n            </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddProduct;\r\n\r\n","import React from 'react';\r\nimport './Product.scss';\r\n\r\nconst Product = props => {\r\n  let classes = ['product'];\r\n  if (props.important && props.active) {\r\n    classes = classes.concat('product--important')\r\n  }\r\n\r\n  const date = new Date(props.purchasedDate).toLocaleString();\r\n\r\n  const { text, active, id, click } = props;\r\n\r\n  return (\r\n    <li className={classes.join(\" \")}>\r\n      {active ? <p className=\"product__text\">{text}</p> : <div><p className=\"product__text\">{text}</p><p className=\"product__date\">Data zakupu: {date}</p></div>}\r\n      <div className=\"product-buttons\">\r\n        {active && <button className=\"product-buttons__button\" name=\"purchase\" onClick={e => click(e, id)}><span className=\"fas fa-check\"></span></button>}\r\n        {!active && <button className=\"product-buttons__button\" name=\"restore\" onClick={e => click(e, id)}><span className=\"fas fa-undo-alt\"></span></button>}\r\n        <button className=\"product-buttons__button\" name=\"delete\" onClick={e => click(e, id)}><span className=\"fas fa-times\" ></span></button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Product;","import React, { Component } from 'react';\r\nimport './ProgressBar.scss';\r\n\r\nclass ProgressBar extends Component {\r\n\r\n  state = {\r\n    progressPercent: false\r\n  }\r\n\r\n  // value of progress bar could be expressed as for example 75% or 3/4\r\n  handleClick = () => {\r\n    this.setState({\r\n      progressPercent: !this.state.progressPercent\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    // value of progress bar\r\n    const purchased = this.props.purchased.length;\r\n    const sum = this.props.active.length + this.props.purchased.length;\r\n    let percent;\r\n    if (sum === 0) {\r\n      percent = 0\r\n    } else {\r\n      percent = Math.round((purchased / sum) * 100);\r\n    }\r\n\r\n    let redHue;\r\n    let greenHue;\r\n\r\n    if (percent <= 50) {\r\n      redHue = 255;\r\n      greenHue = (percent / 50) * 255;\r\n    }\r\n    else {\r\n      redHue = 255 - (((percent - 50) / 50) * 255);\r\n      greenHue = 255 - (((percent - 50) / 100) * 255);\r\n    }\r\n\r\n    const style = {\r\n      width: `${percent}%`,\r\n      backgroundColor: `rgb(${redHue}, ${greenHue}, 0)`\r\n    }\r\n\r\n    const numeric = `${purchased} / ${sum}`;\r\n    const percentage = `${percent}%`;\r\n\r\n    return (\r\n      <div className=\"progress\">\r\n        <div className=\"progress__bar\">\r\n          <div style={style} className=\"progress__bar--fill\"></div>\r\n        </div>\r\n        <span className=\"progress__percent\" onClick={this.handleClick}> {this.state.progressPercent ? percentage : numeric}  </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport './ShoppingList.scss';\r\nimport Product from './Product';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst ShoppingList = props => {\r\n\r\n  const activeProducts = props.products.filter(product => product.active);\r\n  const purchasedProducts = props.products.filter(product => !product.active);\r\n\r\n  if (props.activeSort) {\r\n    activeProducts.sort((a, b) => b.id - a.id)\r\n  } else {\r\n    activeProducts.sort((a, b) => {\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n      return a.localeCompare(b)\r\n    })\r\n  }\r\n\r\n  if (props.purchasedSort) {\r\n    purchasedProducts.sort((a, b) => b.purchasedDate - a.purchasedDate)\r\n  } else {\r\n    purchasedProducts.sort((a, b) => {\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n      return a.localeCompare(b)\r\n    })\r\n  }\r\n\r\n  const activeProductsList = activeProducts.map(product => (\r\n    <Product\r\n      key={product.id}\r\n      id={product.id}\r\n      text={product.text}\r\n      important={product.important}\r\n      active={product.active}\r\n      click={props.click}\r\n    />\r\n  ))\r\n  const purchasedProductsList = purchasedProducts.map(product => (\r\n    <Product\r\n      key={product.id}\r\n      id={product.id}\r\n      text={product.text}\r\n      important={product.important}\r\n      active={product.active}\r\n      purchasedDate={product.purchasedDate}\r\n      click={props.click}\r\n    />\r\n  ))\r\n\r\n  // for desktop (active and purchased are in 2 columns) - if purchased list is empty - active list has 100% width\r\n  let wrapperStyle;\r\n  if (purchasedProductsList.length === 0) {\r\n    wrapperStyle = {\r\n      display: 'block'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"products-lists-wrapper\" style={wrapperStyle}>\r\n        <section className=\"products-lists\">\r\n          {activeProductsList.length ? <h2 className=\"products-lists__headline\">Produkty do kupienia:</h2> : <h2 className=\"products-lists__headline\">Brak produktów do kupienia!</h2>}\r\n          {activeProductsList.length > 0 ? <button className=\"products-lists__button\" name=\"active\" onClick={() => props.handleSort('active')}>{props.activeSort ? 'Aktualne sortowanie: wg daty dodania' : 'Aktualne sortowanie: alfabetycznie'}</button> : null}\r\n          <ul className=\"products-lists__list products-lists__list--active\">\r\n            {activeProductsList}\r\n          </ul>\r\n        </section>\r\n        <section className=\"products-lists\">\r\n          {purchasedProductsList.length ? <h2 className=\"products-lists__headline\">Kupione produkty:</h2> : null}\r\n          {purchasedProductsList.length > 0 ? <button className=\"products-lists__button\" name=\"purchased\" onClick={() => props.handleSort('purchased')}>{props.purchasedSort ? 'Aktualne sortowanie: wg daty zakupu' : 'Aktualne sortowanie: alfabetycznie'}</button> : null}\r\n          <ul className=\"products-lists__list products-lists__list--purchased\">\r\n            {purchasedProductsList}\r\n          </ul>\r\n        </section>\r\n      </div>\r\n      <ProgressBar active={activeProducts} purchased={purchasedProducts} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShoppingList;","import React, { Component } from 'react';\nimport './App.scss';\nimport AddProduct from './AddProduct';\nimport ShoppingList from './ShoppingList';\n\nclass App extends Component {\n\n  idCounter = 1;\n\n  state = {\n    products: [],\n    activeSort: true,\n    purchasedSort: true\n  }\n\n  addProduct = (text, important) => {\n    const product = {\n      id: this.idCounter,\n      text,\n      important,\n      purchasedDate: '',\n      active: true\n    };\n    this.setState(prevState => ({\n      products: [...prevState.products, product]\n    }));\n    this.idCounter++;\n  }\n\n  handleClick = (e, id) => {\n    let products = [...this.state.products];\n\n    if (e.currentTarget.name === 'delete') {\n      products = products.filter(product => product.id !== id)\n\n    } else {\n      const index = products.findIndex(product => product.id === id);\n\n      if (e.currentTarget.name === 'purchase') {\n        const purchasedDate = new Date().getTime();\n        products[index].active = false;\n        products[index].purchasedDate = purchasedDate;\n\n      } else if (e.currentTarget.name === 'restore') {\n        products[index].active = true;\n      }\n    }\n    this.setState({\n      products\n    })\n  }\n\n  handleSort = (name) => {\n    if (name === 'active') {\n      this.setState({\n        activeSort: !this.state.activeSort\n      })\n    } else {\n      this.setState({\n        purchasedSort: !this.state.purchasedSort\n      })\n    }\n  }\n\n  render() {\n\n    const { products, activeSort, purchasedSort } = this.state;\n\n    return (\n      <>\n        <h1 className=\"headline\">Lista zakupów</h1>\n        <div className=\"app\">\n          <AddProduct\n            addProduct={this.addProduct}\n          />\n          <ShoppingList\n            products={products}\n            activeSort={activeSort}\n            purchasedSort={purchasedSort}\n            addProduct={this.addProduct}\n            click={this.handleClick}\n            handleSort={this.handleSort}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}